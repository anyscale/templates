# Change this to the model you want to fine-tune
model_id: meta-llama/Meta-Llama-Guard-2-8B

# Change this to the path to your training data
train_path: s3://air-example-data/nvidia-aegis-llama-guard-defensive/nvidia-aegis-llama-guard-defensive-train.jsonl

# Change this to the path to your validation data. This is optional
valid_path: s3://air-example-data/nvidia-aegis-llama-guard-defensive/nvidia-aegis-llama-guard-defensive-test.jsonl

# Generation config set to have no formatting.
generation_config:
  prompt_format:
    system: "{instruction}"
    user: "{instruction}"
    assistant: "{instruction} </s>"
    trailing_assistant: ""
    bos: ""
  stopping_sequences: ["</s>"]

# Change this to the context length you want to use. Examples with longer
# context length will be truncated.
context_length: 4096

# Change this to total number of GPUs that you want to use
num_devices: 4

# Change this to the batch size that you want to use
train_batch_size_per_device: 4
eval_batch_size_per_device: 4

# Change this to the learning rate that you want to use
learning_rate: 1e-4

# Deepspeed configuration, you can provide your own deepspeed setup
deepspeed:
  config_path: deepspeed_configs/zero_3_offload_optim+param.json

# Accelerator type
worker_resources:
  anyscale/accelerator_shape:4xA10G: 0.001

# Lora configuration
lora_config:
  r: 8
  lora_alpha: 16
  lora_dropout: 0.05
  target_modules:
    - q_proj
    - v_proj
    - k_proj
    - o_proj
    - gate_proj
    - up_proj
    - down_proj
    - embed_tokens
    - lm_head
  task_type: "CAUSAL_LM"
  modules_to_save: []
